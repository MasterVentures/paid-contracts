/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { WorkflowGateway } from "../WorkflowGateway";

export class WorkflowGateway__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WorkflowGateway> {
    return super.deploy(overrides || {}) as Promise<WorkflowGateway>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WorkflowGateway {
    return super.attach(address) as WorkflowGateway;
  }
  connect(signer: Signer): WorkflowGateway__factory {
    return super.connect(signer) as WorkflowGateway__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorkflowGateway {
    return new Contract(address, _abi, signerOrProvider) as WorkflowGateway;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "AgreementClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "AgreementCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "AgreementDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "AgreementModified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "next",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "actorId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "documentId",
        type: "uint256",
      },
    ],
    name: "WorkflowStepCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "actorId",
        type: "uint256",
      },
    ],
    name: "WorkflowStepStart",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "agreements",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "signatory",
            type: "address",
          },
        ],
        internalType: "struct AgreementModels.Party",
        name: "fromSigner",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signatory",
            type: "address",
          },
        ],
        internalType: "struct AgreementModels.Party",
        name: "toSigner",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "escrowed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "validUntil",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "agreementForm",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "agreementFormTemplateId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "created_at",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updated_at",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "multiaddressReference",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "digest",
            type: "bytes",
          },
        ],
        internalType: "struct AgreementModels.Content",
        name: "file",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610405806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bd14de9614610030575b600080fd5b61004361003e36600461028f565b610062565b6040516100599a999897969594939291906102f2565b60405180910390f35b6001602081815260009283526040928390208351808301855281546001600160a01b0390811682528551938401909552928101549093168152600283015460038401546004850180549495939460ff9093169391926100c090610394565b80601f01602080910402602001604051908101604052809291908181526020018280546100ec90610394565b80156101395780601f1061010e57610100808354040283529160200191610139565b820191906000526020600020905b81548152906001019060200180831161011c57829003601f168201915b5050505050908060050154908060060154908060070154908060080154908060090160405180604001604052908160008201805461017690610394565b80601f01602080910402602001604051908101604052809291908181526020018280546101a290610394565b80156101ef5780601f106101c4576101008083540402835291602001916101ef565b820191906000526020600020905b8154815290600101906020018083116101d257829003601f168201915b5050505050815260200160018201805461020890610394565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610394565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b50505050508152505090508a565b6000602082840312156102a0578081fd5b5035919050565b60008151808452815b818110156102cc576020818501810151868301820152016102b0565b818111156102dd5782602083870101525b50601f01601f19169290920160200192915050565b8a516001600160a01b0390811682528a51166020820152881515604082015260608101889052610140608082018190526000906103318382018a6102a7565b90508760a08401528660c08401528560e08401528461010084015282810361012084015283516040825261036860408301826102a7565b90506020850151828203602084015261038182826102a7565b9f9e505050505050505050505050505050565b6002810460018216806103a857607f821691505b602082108114156103c957634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208bc01bf020a2cafcf6872210921d1491bbdef1fcf7981f6c12c3eb4819208f2864736f6c63430008000033";
