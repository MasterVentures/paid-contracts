/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { AgreementModels } from "../AgreementModels";

export class AgreementModels__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AgreementModels> {
    return super.deploy(overrides || {}) as Promise<AgreementModels>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AgreementModels {
    return super.attach(address) as AgreementModels;
  }
  connect(signer: Signer): AgreementModels__factory {
    return super.connect(signer) as AgreementModels__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AgreementModels {
    return new Contract(address, _abi, signerOrProvider) as AgreementModels;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "formTemplateId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "partySource",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "partyDestination",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "agreementStoredReference",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    name: "AgreementEvents",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPayment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPayment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ChangePaymentEvents",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ChangeRecipientEvents",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "payments",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PaymentEvents",
    type: "event",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212207fdde9e1e294b0f4aea5762a850781c8ee69cbfe77e107ebac2f500391d25b4464736f6c63430008000033";
